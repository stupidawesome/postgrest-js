{
	"id": 0,
	"name": "@supabase/postgrest-js",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "\"builder\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/postgrest-js/postgrest-js/src/builder.ts",
			"children": [
				{
					"id": 14,
					"name": "PostgrestBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Base builder"
					},
					"typeParameter": [
						{
							"id": 15,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"children": [
						{
							"id": 24,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 25,
									"name": "new PostgrestBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 26,
											"name": "builder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 14,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												],
												"name": "PostgrestBuilder"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 14,
										"name": "PostgrestBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 38,
									"character": 34
								}
							]
						},
						{
							"id": 23,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 38,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "Partial"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "T"
												}
											],
											"name": "Partial"
										}
									}
								]
							}
						},
						{
							"id": 18,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 36,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 20,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 21,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "builder.ts",
											"line": 36,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 16,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 34,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "GET"
									},
									{
										"type": "stringLiteral",
										"value": "HEAD"
									},
									{
										"type": "stringLiteral",
										"value": "POST"
									},
									{
										"type": "stringLiteral",
										"value": "PATCH"
									},
									{
										"type": "stringLiteral",
										"value": "DELETE"
									}
								]
							}
						},
						{
							"id": 22,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 37,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 17,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 35,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "URL"
							}
						},
						{
							"id": 27,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 28,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 29,
											"name": "onfulfilled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 30,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 31,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 32,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 33,
											"name": "onrejected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 34,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 35,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 36,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 44,
									"character": 6
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								24
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								23,
								18,
								16,
								22,
								17
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								27
							]
						}
					],
					"sources": [
						{
							"fileName": "builder.ts",
							"line": 33,
							"character": 38
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 37,
							"name": "PostgrestQueryBuilder"
						},
						{
							"type": "reference",
							"id": 85,
							"name": "PostgrestTransformBuilder"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "PromiseLike"
						}
					]
				},
				{
					"id": 131,
					"name": "PostgrestFilterBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"typeParameter": [
						{
							"id": 132,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 283,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 284,
									"name": "new PostgrestFilterBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 285,
											"name": "builder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 14,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												],
												"name": "PostgrestBuilder"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 131,
										"name": "PostgrestFilterBuilder"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 24,
										"name": "PostgrestBuilder.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 38,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "PostgrestBuilder.__constructor"
							}
						},
						{
							"id": 282,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 38,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "Partial"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "T"
												}
											],
											"name": "Partial"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "PostgrestBuilder.body"
							}
						},
						{
							"id": 277,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 36,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 278,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 279,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 280,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "builder.ts",
											"line": 36,
											"character": 11
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "PostgrestBuilder.headers"
							}
						},
						{
							"id": 275,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 34,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "GET"
									},
									{
										"type": "stringLiteral",
										"value": "HEAD"
									},
									{
										"type": "stringLiteral",
										"value": "POST"
									},
									{
										"type": "stringLiteral",
										"value": "PATCH"
									},
									{
										"type": "stringLiteral",
										"value": "DELETE"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "PostgrestBuilder.method"
							}
						},
						{
							"id": 281,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 37,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "PostgrestBuilder.schema"
							}
						},
						{
							"id": 276,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 35,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "URL"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "PostgrestBuilder.url"
							}
						},
						{
							"id": 205,
							"name": "adj",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 206,
									"name": "adj",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose range value on the stated `column` is adjacent to\nthe specified `range`."
									},
									"parameters": [
										{
											"id": 207,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 208,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The range to filter with.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 517,
									"character": 5
								}
							]
						},
						{
							"id": 185,
							"name": "cd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 186,
									"name": "cd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose json, array, or range value on the stated `column` is\ncontained by the specified `value`."
									},
									"parameters": [
										{
											"id": 187,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 188,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "typeParameter",
																	"name": "T"
																}
															},
															"objectType": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 448,
									"character": 4
								}
							]
						},
						{
							"id": 181,
							"name": "cs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 182,
									"name": "cs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose json, array, or range value on the stated `column`\ncontains the values specified in `value`."
									},
									"parameters": [
										{
											"id": 183,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 184,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "typeParameter",
																	"name": "T"
																}
															},
															"objectType": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 426,
									"character": 4
								}
							]
						},
						{
							"id": 141,
							"name": "eq",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 142,
									"name": "eq",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose value on the stated `column` exactly matches the\nspecified `value`."
									},
									"parameters": [
										{
											"id": 143,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 144,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												},
												"objectType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 306,
									"character": 4
								}
							]
						},
						{
							"id": 241,
							"name": "filter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 242,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose `column` satisfies the filter."
									},
									"parameters": [
										{
											"id": 243,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 244,
											"name": "operator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The operator to filter with."
											},
											"type": {
												"type": "reference",
												"id": 300,
												"name": "FilterOperator"
											}
										},
										{
											"id": 245,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 603,
									"character": 8
								}
							]
						},
						{
							"id": 213,
							"name": "fts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 214,
									"name": "fts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose tsvector value on the stated `column` matches\nto_tsquery(`query`)."
									},
									"parameters": [
										{
											"id": 215,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 216,
											"name": "query",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The Postgres tsquery string to filter with."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 217,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__2",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 218,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 219,
															"name": "config",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The text search configuration to use.\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 548,
																	"character": 46
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																219
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 548,
															"character": 37
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 548,
									"character": 5
								}
							]
						},
						{
							"id": 149,
							"name": "gt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 150,
									"name": "gt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose value on the stated `column` is greater than the\nspecified `value`."
									},
									"parameters": [
										{
											"id": 151,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 152,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												},
												"objectType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 330,
									"character": 4
								}
							]
						},
						{
							"id": 153,
							"name": "gte",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 154,
									"name": "gte",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose value on the stated `column` is greater than or\nequal to the specified `value`."
									},
									"parameters": [
										{
											"id": 155,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 156,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												},
												"objectType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 342,
									"character": 5
								}
							]
						},
						{
							"id": 169,
							"name": "ilike",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 170,
									"name": "ilike",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose value in the stated `column` matches the supplied\n`pattern` (case insensitive)."
									},
									"parameters": [
										{
											"id": 171,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 172,
											"name": "pattern",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The pattern to filter with.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 390,
									"character": 7
								}
							]
						},
						{
							"id": 177,
							"name": "in",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 178,
									"name": "in",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose value on the stated `column` is found on the\nspecified `values`."
									},
									"parameters": [
										{
											"id": 179,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 180,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The values to filter with.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "typeParameter",
															"name": "T"
														}
													},
													"objectType": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 414,
									"character": 4
								}
							]
						},
						{
							"id": 173,
							"name": "is",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 174,
									"name": "is",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A check for exact equality (null, true, false), finds all rows whose\nvalue on the stated `column` exactly match the specified `value`."
									},
									"parameters": [
										{
											"id": 175,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 176,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 402,
									"character": 4
								}
							]
						},
						{
							"id": 165,
							"name": "like",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 166,
									"name": "like",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose value in the stated `column` matches the supplied\n`pattern` (case sensitive)."
									},
									"parameters": [
										{
											"id": 167,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 168,
											"name": "pattern",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The pattern to filter with.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 378,
									"character": 6
								}
							]
						},
						{
							"id": 260,
							"name": "limit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 261,
									"name": "limit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Limits the result with the specified `count`."
									},
									"parameters": [
										{
											"id": 262,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The maximum no. of rows to limit to."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 263,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 264,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 265,
															"name": "foreignTable",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The foreign table to use (for foreign columns).\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 209,
																	"character": 18
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																265
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 208,
															"character": 18
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 85,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestTransformBuilder"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 95,
										"name": "PostgrestTransformBuilder.limit"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 207,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 95,
								"name": "PostgrestTransformBuilder.limit"
							}
						},
						{
							"id": 157,
							"name": "lt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 158,
									"name": "lt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose value on the stated `column` is less than the\nspecified `value`."
									},
									"parameters": [
										{
											"id": 159,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 160,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												},
												"objectType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 354,
									"character": 4
								}
							]
						},
						{
							"id": 161,
							"name": "lte",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 162,
									"name": "lte",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose value on the stated `column` is less than or equal\nto the specified `value`."
									},
									"parameters": [
										{
											"id": 163,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 164,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												},
												"objectType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 366,
									"character": 5
								}
							]
						},
						{
							"id": 246,
							"name": "match",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 247,
									"name": "match",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose columns match the specified `query` object."
									},
									"parameters": [
										{
											"id": 248,
											"name": "query",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The object to filter with, with column names as keys mapped\n              to their filter values.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 249,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 250,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 251,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 614,
															"character": 14
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "unknown",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 614,
									"character": 7
								}
							]
						},
						{
							"id": 145,
							"name": "neq",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 146,
									"name": "neq",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose value on the stated `column` doesn't match the\nspecified `value`."
									},
									"parameters": [
										{
											"id": 147,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 148,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												},
												"objectType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 318,
									"character": 5
								}
							]
						},
						{
							"id": 133,
							"name": "not",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 134,
									"name": "not",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows which doesn't satisfy the filter."
									},
									"parameters": [
										{
											"id": 135,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 136,
											"name": "operator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The operator to filter with."
											},
											"type": {
												"type": "reference",
												"id": 300,
												"name": "FilterOperator"
											}
										},
										{
											"id": 137,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 284,
									"character": 5
								}
							]
						},
						{
							"id": 197,
							"name": "nxl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 198,
									"name": "nxl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the left of the specified `range`."
									},
									"parameters": [
										{
											"id": 199,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 200,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The range to filter with.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 493,
									"character": 5
								}
							]
						},
						{
							"id": 201,
							"name": "nxr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 202,
									"name": "nxr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the right of the specified `range`."
									},
									"parameters": [
										{
											"id": 203,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 204,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The range to filter with.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 505,
									"character": 5
								}
							]
						},
						{
							"id": 138,
							"name": "or",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 139,
									"name": "or",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows satisfying at least one of the filters."
									},
									"parameters": [
										{
											"id": 140,
											"name": "filters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The filters to use, separated by commas.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 294,
									"character": 4
								}
							]
						},
						{
							"id": 252,
							"name": "order",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 253,
									"name": "order",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Orders the result with the specified `column`."
									},
									"parameters": [
										{
											"id": 254,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to order on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 255,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 256,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 257,
															"name": "ascending",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "If `true`, the result will be in ascending order."
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 188,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 259,
															"name": "foreignTable",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The foreign table to use (if `column` is a foreign column).\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 190,
																	"character": 18
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														},
														{
															"id": 258,
															"name": "nullsFirst",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "If `true`, `null`s appear first."
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 189,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "false"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																257,
																259,
																258
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 186,
															"character": 20
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 85,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestTransformBuilder"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 87,
										"name": "PostgrestTransformBuilder.order"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 185,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 87,
								"name": "PostgrestTransformBuilder.order"
							}
						},
						{
							"id": 209,
							"name": "ov",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 210,
									"name": "ov",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose array or range value on the stated `column` is\ncontained by the specified `value`."
									},
									"parameters": [
										{
											"id": 211,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 212,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to filter with.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "typeParameter",
																	"name": "T"
																}
															},
															"objectType": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 529,
									"character": 4
								}
							]
						},
						{
							"id": 227,
							"name": "phfts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 228,
									"name": "phfts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose tsvector value on the stated `column` matches\nphraseto_tsquery(`query`)."
									},
									"parameters": [
										{
											"id": 229,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 230,
											"name": "query",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The Postgres tsquery string to filter with."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 231,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__2",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 232,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 233,
															"name": "config",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The text search configuration to use.\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 576,
																	"character": 48
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																233
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 576,
															"character": 39
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 576,
									"character": 7
								}
							]
						},
						{
							"id": 220,
							"name": "plfts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 221,
									"name": "plfts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose tsvector value on the stated `column` matches\nplainto_tsquery(`query`)."
									},
									"parameters": [
										{
											"id": 222,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 223,
											"name": "query",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The Postgres tsquery string to filter with."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 224,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__2",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 225,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 226,
															"name": "config",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The text search configuration to use.\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 562,
																	"character": 48
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																226
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 562,
															"character": 39
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 562,
									"character": 7
								}
							]
						},
						{
							"id": 266,
							"name": "range",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 267,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Limits the result to rows within the specified range, inclusive."
									},
									"parameters": [
										{
											"id": 268,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The starting index from which to limit the result, inclusive."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 269,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The last index to which to limit the result, inclusive."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 270,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__2",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 271,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 272,
															"name": "foreignTable",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The foreign table to use (for foreign columns).\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 226,
																	"character": 18
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																272
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 225,
															"character": 15
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 85,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestTransformBuilder"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 101,
										"name": "PostgrestTransformBuilder.range"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 223,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 101,
								"name": "PostgrestTransformBuilder.range"
							}
						},
						{
							"id": 273,
							"name": "single",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 274,
									"name": "single",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves only one row from the result. Result must be one row (e.g. using\n`limit`), otherwise this will result in an error."
									},
									"type": {
										"type": "reference",
										"id": 85,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestTransformBuilder"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 108,
										"name": "PostgrestTransformBuilder.single"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 240,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 108,
								"name": "PostgrestTransformBuilder.single"
							}
						},
						{
							"id": 189,
							"name": "sl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 190,
									"name": "sl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose range value on the stated `column` is strictly to the\nleft of the specified `range`."
									},
									"parameters": [
										{
											"id": 191,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 192,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The range to filter with.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 469,
									"character": 4
								}
							]
						},
						{
							"id": 193,
							"name": "sr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 194,
									"name": "sr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose range value on the stated `column` is strictly to\nthe right of the specified `range`."
									},
									"parameters": [
										{
											"id": 195,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 196,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The range to filter with.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 481,
									"character": 4
								}
							]
						},
						{
							"id": 286,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 287,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 288,
											"name": "onfulfilled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 289,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 290,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 291,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 292,
											"name": "onrejected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 293,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 294,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 295,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 27,
										"name": "PostgrestBuilder.then"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 44,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 27,
								"name": "PostgrestBuilder.then"
							}
						},
						{
							"id": 234,
							"name": "wfts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 235,
									"name": "wfts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds all rows whose tsvector value on the stated `column` matches\nwebsearch_to_tsquery(`query`)."
									},
									"parameters": [
										{
											"id": 236,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to filter on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 237,
											"name": "query",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The Postgres tsquery string to filter with."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 238,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__2",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 239,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 240,
															"name": "config",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The text search configuration to use.\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 590,
																	"character": 47
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																240
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 590,
															"character": 38
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 590,
									"character": 6
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								283
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								282,
								277,
								275,
								281,
								276
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								205,
								185,
								181,
								141,
								241,
								213,
								149,
								153,
								169,
								177,
								173,
								165,
								260,
								157,
								161,
								246,
								145,
								133,
								197,
								201,
								138,
								252,
								209,
								227,
								220,
								266,
								273,
								189,
								193,
								286,
								234
							]
						}
					],
					"sources": [
						{
							"fileName": "builder.ts",
							"line": 276,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 85,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							],
							"name": "PostgrestTransformBuilder"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "PromiseLike"
						}
					]
				},
				{
					"id": 37,
					"name": "PostgrestQueryBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "CRUD"
					},
					"typeParameter": [
						{
							"id": 38,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"children": [
						{
							"id": 39,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 40,
									"name": "new PostgrestQueryBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 41,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 42,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 44,
															"name": "headers",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 90,
																	"character": 13
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 45,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"indexSignature": [
																		{
																			"id": 46,
																			"name": "__index",
																			"kind": 8192,
																			"kindString": "Index signature",
																			"flags": {
																				"isExported": true
																			},
																			"parameters": [
																				{
																					"id": 47,
																					"name": "key",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 48,
															"name": "schema",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 90,
																	"character": 26
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																44,
																48
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 89,
															"character": 16
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 37,
										"name": "PostgrestQueryBuilder"
									},
									"overwrites": {
										"type": "reference",
										"id": 24,
										"name": "PostgrestBuilder.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 87,
									"character": 67
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 24,
								"name": "PostgrestBuilder.__constructor"
							}
						},
						{
							"id": 74,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 38,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "Partial"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "T"
												}
											],
											"name": "Partial"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "PostgrestBuilder.body"
							}
						},
						{
							"id": 69,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 36,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 70,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 71,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 72,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "builder.ts",
											"line": 36,
											"character": 11
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "PostgrestBuilder.headers"
							}
						},
						{
							"id": 67,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 34,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "GET"
									},
									{
										"type": "stringLiteral",
										"value": "HEAD"
									},
									{
										"type": "stringLiteral",
										"value": "POST"
									},
									{
										"type": "stringLiteral",
										"value": "PATCH"
									},
									{
										"type": "stringLiteral",
										"value": "DELETE"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "PostgrestBuilder.method"
							}
						},
						{
							"id": 73,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 37,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "PostgrestBuilder.schema"
							}
						},
						{
							"id": 68,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 35,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "URL"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "PostgrestBuilder.url"
							}
						},
						{
							"id": 62,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 63,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Performs a DELETE on the table."
									},
									"type": {
										"type": "reference",
										"id": 131,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestFilterBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 158,
									"character": 8
								}
							]
						},
						{
							"id": 52,
							"name": "insert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 53,
									"name": "insert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Performs an INSERT into the table."
									},
									"parameters": [
										{
											"id": 54,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The values to insert."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T"
															}
														],
														"name": "Partial"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "typeParameter",
																	"name": "T"
																}
															],
															"name": "Partial"
														}
													}
												]
											}
										},
										{
											"id": 55,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 56,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 58,
															"name": "onConflict",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 132,
																	"character": 32
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														},
														{
															"id": 57,
															"name": "upsert",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "If `true`, performs an UPSERT."
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 132,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "false"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																58,
																57
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 131,
															"character": 38
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 14,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 130,
									"character": 8
								}
							]
						},
						{
							"id": 49,
							"name": "select",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 50,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Performs horizontal filtering with SELECT."
									},
									"parameters": [
										{
											"id": 51,
											"name": "columns",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The columns to retrieve, separated by commas.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"*\""
										}
									],
									"type": {
										"type": "reference",
										"id": 131,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestFilterBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 103,
									"character": 8
								}
							]
						},
						{
							"id": 75,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 76,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 77,
											"name": "onfulfilled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 78,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 79,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 80,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 81,
											"name": "onrejected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 82,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 83,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 84,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 27,
										"name": "PostgrestBuilder.then"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 44,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 27,
								"name": "PostgrestBuilder.then"
							}
						},
						{
							"id": 59,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 60,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Performs an UPDATE on the table."
									},
									"parameters": [
										{
											"id": 61,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The values to update.\n"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												],
												"name": "Partial"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 131,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestFilterBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 148,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								39
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								74,
								69,
								67,
								73,
								68
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								62,
								52,
								49,
								75,
								59
							]
						}
					],
					"sources": [
						{
							"fileName": "builder.ts",
							"line": 87,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 14,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							],
							"name": "PostgrestBuilder"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "PromiseLike"
						}
					]
				},
				{
					"id": 85,
					"name": "PostgrestTransformBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Post-filters (transforms)"
					},
					"typeParameter": [
						{
							"id": 86,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 118,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 119,
									"name": "new PostgrestTransformBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 120,
											"name": "builder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 14,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												],
												"name": "PostgrestBuilder"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 85,
										"name": "PostgrestTransformBuilder"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 24,
										"name": "PostgrestBuilder.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 38,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "PostgrestBuilder.__constructor"
							}
						},
						{
							"id": 117,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 38,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "Partial"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "T"
												}
											],
											"name": "Partial"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "PostgrestBuilder.body"
							}
						},
						{
							"id": 112,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 36,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 113,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 114,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 115,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "builder.ts",
											"line": 36,
											"character": 11
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "PostgrestBuilder.headers"
							}
						},
						{
							"id": 110,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 34,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "GET"
									},
									{
										"type": "stringLiteral",
										"value": "HEAD"
									},
									{
										"type": "stringLiteral",
										"value": "POST"
									},
									{
										"type": "stringLiteral",
										"value": "PATCH"
									},
									{
										"type": "stringLiteral",
										"value": "DELETE"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "PostgrestBuilder.method"
							}
						},
						{
							"id": 116,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 37,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "PostgrestBuilder.schema"
							}
						},
						{
							"id": 111,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 35,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "URL"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "PostgrestBuilder.url"
							}
						},
						{
							"id": 95,
							"name": "limit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 96,
									"name": "limit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Limits the result with the specified `count`."
									},
									"parameters": [
										{
											"id": 97,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The maximum no. of rows to limit to."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 98,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 99,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 100,
															"name": "foreignTable",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The foreign table to use (for foreign columns).\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 209,
																	"character": 18
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																100
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 208,
															"character": 18
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 85,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestTransformBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 207,
									"character": 7
								}
							]
						},
						{
							"id": 87,
							"name": "order",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 88,
									"name": "order",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Orders the result with the specified `column`."
									},
									"parameters": [
										{
											"id": 89,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The column to order on."
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										},
										{
											"id": 90,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 91,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 92,
															"name": "ascending",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "If `true`, the result will be in ascending order."
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 188,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 94,
															"name": "foreignTable",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The foreign table to use (if `column` is a foreign column).\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 190,
																	"character": 18
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														},
														{
															"id": 93,
															"name": "nullsFirst",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "If `true`, `null`s appear first."
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 189,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "false"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																92,
																94,
																93
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 186,
															"character": 20
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 85,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestTransformBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 185,
									"character": 7
								}
							]
						},
						{
							"id": 101,
							"name": "range",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 102,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Limits the result to rows within the specified range, inclusive."
									},
									"parameters": [
										{
											"id": 103,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The starting index from which to limit the result, inclusive."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 104,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The last index to which to limit the result, inclusive."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 105,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__2",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 106,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 107,
															"name": "foreignTable",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"comment": {
																"text": "The foreign table to use (for foreign columns).\n"
															},
															"sources": [
																{
																	"fileName": "builder.ts",
																	"line": 226,
																	"character": 18
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																107
															]
														}
													],
													"sources": [
														{
															"fileName": "builder.ts",
															"line": 225,
															"character": 15
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 85,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestTransformBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 223,
									"character": 7
								}
							]
						},
						{
							"id": 108,
							"name": "single",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 109,
									"name": "single",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves only one row from the result. Result must be one row (e.g. using\n`limit`), otherwise this will result in an error."
									},
									"type": {
										"type": "reference",
										"id": 85,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										],
										"name": "PostgrestTransformBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 240,
									"character": 8
								}
							]
						},
						{
							"id": 121,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 122,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 123,
											"name": "onfulfilled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 124,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 125,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 126,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 127,
											"name": "onrejected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 128,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 129,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 130,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 27,
										"name": "PostgrestBuilder.then"
									}
								}
							],
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 44,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 27,
								"name": "PostgrestBuilder.then"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								118
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								117,
								112,
								110,
								116,
								111
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								95,
								87,
								101,
								108,
								121
							]
						}
					],
					"sources": [
						{
							"fileName": "builder.ts",
							"line": 176,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 14,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							],
							"name": "PostgrestBuilder"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 131,
							"name": "PostgrestFilterBuilder"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "PromiseLike"
						}
					]
				},
				{
					"id": 2,
					"name": "PostgrestError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Error format",
						"text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
					},
					"children": [
						{
							"id": 6,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4,
							"name": "details",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 10,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5,
							"name": "hint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 11,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 9,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								6,
								4,
								5,
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "builder.ts",
							"line": 8,
							"character": 24
						}
					]
				},
				{
					"id": 7,
					"name": "PostgrestResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Response format",
						"text": "{@link https://github.com/supabase/supabase-js/issues/32}\n"
					},
					"typeParameter": [
						{
							"id": 8,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 13,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 26,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 10,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 22,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 9,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 21,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2,
										"name": "PostgrestError"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 11,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 12,
							"name": "statusText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "builder.ts",
									"line": 24,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								13,
								10,
								9,
								11,
								12
							]
						}
					],
					"sources": [
						{
							"fileName": "builder.ts",
							"line": 20,
							"character": 27
						}
					]
				},
				{
					"id": 300,
					"name": "FilterOperator",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "builder.ts",
							"line": 252,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "eq"
							},
							{
								"type": "stringLiteral",
								"value": "neq"
							},
							{
								"type": "stringLiteral",
								"value": "gt"
							},
							{
								"type": "stringLiteral",
								"value": "gte"
							},
							{
								"type": "stringLiteral",
								"value": "lt"
							},
							{
								"type": "stringLiteral",
								"value": "lte"
							},
							{
								"type": "stringLiteral",
								"value": "like"
							},
							{
								"type": "stringLiteral",
								"value": "ilike"
							},
							{
								"type": "stringLiteral",
								"value": "is"
							},
							{
								"type": "stringLiteral",
								"value": "in"
							},
							{
								"type": "stringLiteral",
								"value": "cs"
							},
							{
								"type": "stringLiteral",
								"value": "cd"
							},
							{
								"type": "stringLiteral",
								"value": "sl"
							},
							{
								"type": "stringLiteral",
								"value": "sr"
							},
							{
								"type": "stringLiteral",
								"value": "nxl"
							},
							{
								"type": "stringLiteral",
								"value": "nxr"
							},
							{
								"type": "stringLiteral",
								"value": "adj"
							},
							{
								"type": "stringLiteral",
								"value": "ov"
							},
							{
								"type": "stringLiteral",
								"value": "fts"
							},
							{
								"type": "stringLiteral",
								"value": "plfts"
							},
							{
								"type": "stringLiteral",
								"value": "phfts"
							},
							{
								"type": "stringLiteral",
								"value": "wfts"
							}
						]
					}
				},
				{
					"id": 296,
					"name": "cleanFilterArray",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Filters"
					},
					"signatures": [
						{
							"id": 297,
							"name": "cleanFilterArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Filters"
							},
							"typeParameter": [
								{
									"id": 298,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 299,
									"name": "filter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											},
											"objectType": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "builder.ts",
							"line": 250,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						14,
						131,
						37,
						85
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2,
						7
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						300
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						296
					]
				}
			],
			"sources": [
				{
					"fileName": "builder.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 301,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/postgrest-js/postgrest-js/src/index.ts",
			"children": [
				{
					"id": 302,
					"name": "PostgrestClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 309,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Creates a PostgREST client."
							},
							"signatures": [
								{
									"id": 310,
									"name": "new PostgrestClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a PostgREST client."
									},
									"parameters": [
										{
											"id": 311,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "URL of the PostgREST endpoint."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 312,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 313,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 314,
															"name": "headers",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "Custom headers."
															},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 17,
																	"character": 13
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 315,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"indexSignature": [
																		{
																			"id": 316,
																			"name": "__index",
																			"kind": 8192,
																			"kindString": "Index signature",
																			"flags": {
																				"isExported": true
																			},
																			"parameters": [
																				{
																					"id": 317,
																					"name": "key",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 318,
															"name": "schema",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "Postgres schema to switch to.\n"
															},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 17,
																	"character": 26
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																314,
																318
															]
														}
													],
													"sources": [
														{
															"fileName": "index.ts",
															"line": 16,
															"character": 16
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 302,
										"name": "PostgrestClient"
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 6,
									"character": 17
								}
							]
						},
						{
							"id": 304,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 305,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 306,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 307,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "index.ts",
											"line": 5,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 308,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 6,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 303,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 4,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 319,
							"name": "auth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 320,
									"name": "auth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Authenticates the request with JWT."
									},
									"parameters": [
										{
											"id": 321,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The JWT token to use.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 29,
									"character": 6
								}
							]
						},
						{
							"id": 322,
							"name": "from",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 323,
									"name": "from",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Perform a table operation."
									},
									"typeParameter": [
										{
											"id": 324,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 325,
											"name": "table",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The table name to operate on.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 37,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"default": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "PostgrestQueryBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 39,
									"character": 6
								}
							]
						},
						{
							"id": 326,
							"name": "rpc",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 327,
									"name": "rpc",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Perform a stored procedure call."
									},
									"typeParameter": [
										{
											"id": 328,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 329,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The function name to call."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 330,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The parameters to pass to the function call.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 14,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"default": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "PostgrestBuilder"
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 50,
									"character": 5
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								309
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								304,
								308,
								303
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								319,
								322,
								326
							]
						}
					],
					"sources": [
						{
							"fileName": "index.ts",
							"line": 3,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						302
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				301
			]
		}
	]
}